@using OSS.BlazorUI.Components;
@using OSS.BlazorUI.Pages.ShiftsEditUI.Actions;
@using OSS.BlazorUI.Pages.ShiftsEditUI.Components;
@using OSS.BlazorUI.Pages.ShiftsEditUI.Store;
@using OSS.Domain.Entities;
@using System.ComponentModel.DataAnnotations;

@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<ShiftsEditUiState> AppState
@inject IJSRuntime JsRuntime


<ModalDialog Title="Add Participations from Group" IsVisible="@IsVisible" SetVisible="SetVisible">
    <EditForm Model="@model" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="partTypeId">Shift Group</label>
            <InputSelect class="form-control" id="partTypeId" @bind-Value="model.ShiftGrpId">
                <option value="-1">None</option>
                @foreach (var sg in AppState.Value.ShiftGroups)
                {
                    <option value="@sg.Id">@sg.Name</option>
                }
            </InputSelect>
        </div>

        <button class="btn btn-success" type="submit">Submit</button>
        <button class="btn btn-danger" @onclick="() => SetVisible(false)" type="button">Close</button>

        <ValidationSummary />
    </EditForm>
</ModalDialog>

@code {
    private AddPartsFromGrpModel model { get; set; } = new();

    private class AddPartsFromGrpModel
    {
        [Range(0, int.MaxValue, ErrorMessage = "Please select valid shift group")]
        [EditorRequired]
        public int ShiftGrpId { get; set; } = -1;
    }

    public bool IsVisible { get => AppState.Value.ShowAddParticipationsFromGrpModal; }
    public void SetVisible(bool isVisible)
    {
        Dispatcher.Dispatch(new SetShowAddParticipationsFromGrpModalAction(isVisible));
    }

    private void HandleValidSubmit()
    {
        int shiftGrpId = model.ShiftGrpId;
        var activeShift = AppState.Value.ActiveShift;
        Dispatcher.Dispatch(new CreateShiftParticipationFromGroupAction(activeShift, shiftGrpId));
        Dispatcher.Dispatch(new SetShowAddParticipationsFromGrpModalAction(false));
    }
}
